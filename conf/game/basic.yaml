# game paramters
num_states: 10
num_signals: 10

distance: squared_dist # squared_dist or abs_dist

# inverse temp params for generating random distributions: lower -> more uniform distribution

# 0 is useless, \infty is perfect; to sweep

# NOTE: these parameters constrain each other; if they are not both low, only high complexity+accuracy langs will emerge.

# sim-based distribution, sim(x,y) = exp(-gamma * d(x,y)), and 0 => uniform.
discriminative_need_gamma: 1.0 # # will be exponentiated by 10, for utility in the games
meaning_dist_gamma: 0 # will be exponentiated by 10, for perceptually uncertain meaning dists = imprecise imitation in replicator dynamics (Franke and Correia, 2018).

prior_init_alpha: -8 # for communicative need distribution = prior over states (N.B., dirac deltas causes nans), will be exponentiated by 10

# IB Curve params
ib_bound_function: embo # 'embo' or 'homebuilt'
# equally spaced beta for IB curve sweep
overwrite_curves: False # whether to skip curve estimation
maxbeta: 5  # will not be exponentiated
minbeta: -2 # will be exponentiated, i.e. 10 ** minbeta
numbeta: 1500
# use multiprocessing to compute bound
num_processes: null 
