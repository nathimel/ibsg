hydra:
  run:
    dir: outputs/${filepaths.leaf_subdir}
  sweep:
    dir: multirun
    subdir: ${filepaths.leaf_subdir}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task: []
  job:
    name: curve
    chdir: true
    override_dirname: ''
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys:
        - filepaths.leaf_subdir
        - game.num_states
        - game.num_signals
        - simulation.dynamics.population_size
        - game.prior_init_beta
        - game.distance
        - game.meaning_dist_beta
        - game.discriminative_need_beta
        - simulation.dynamics.name
        - simulation.num_trials
        - seed
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /Users/nathanielimel/uci/projects/ibsg
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /Users/nathanielimel/uci/projects/ibsg/conf
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      simulation: basic
      simulation/dynamics: two_population_rd
      game: basic
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
game:
  num_states: 10
  num_signals: 10
  distance: squared_dist
  discriminative_need_beta: 1
  meaning_dist_beta: 0
  prior_init_beta: -8
  maxbeta: 5
  minbeta: -2
  numbeta: 1500
  num_processes: null
simulation:
  dynamics:
    name: two_population_rd
    max_its: 200
    threshold: 1.0e-05
    population_size: null
    graph_beta: null
    population_init_minbeta: -2
    population_init_maxbeta: 5
  use_decoder: false
  num_trials: 8
  trajectory: false
  multiprocessing: true
  num_processes: null
seed: 42
filepaths:
  curve_points_save_fn: curve_points.csv
  ub_curve_points_save_fn: ub_curve_points.csv
  simulation_points_save_fn: simulation_points.csv
  ub_points_save_fn: ub_points.csv
  trajectory_points_save_fn: trajectory_points.csv
  variant_points_save_fn: variant_points.csv
  tradeoff_plot_fn: tradeoff.png
  ub_plot_fn: ub.png
  comm_cost_plot_fn: comm_cost.png
  game_subdir: states=${game.num_states}/signals=${game.num_signals}/prior=${game.prior_init_beta}/dist=${game.distance}/meaning_certainty=${game.meaning_dist_beta}
  curve_above_subdir: discr_need=${game.discriminative_need_beta}/seed=${seed}
  simulation_subdir: dynamics=${simulation.dynamics.name}/num_trials=${simulation.num_trials}/population_size=${simulation.dynamics.population_size}
  leaf_subdir: ${filepaths.game_subdir}/${filepaths.curve_above_subdir}/${filepaths.simulation_subdir}
